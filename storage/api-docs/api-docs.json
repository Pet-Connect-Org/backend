{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Api Documentation",
        "description": "L5 Swagger",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0."
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/auth/sign-up": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "operationId": "8060ba7cb59324131da8151d9518ca60",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sign up successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sign up successful"
                                        },
                                        "accessToken": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The password field format is invalid. (and 1 more error)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field format is invalid."
                                                    }
                                                },
                                                "confirmPassword": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The confirm password field must match password."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "sex": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected sex is invalid."
                                                    }
                                                },
                                                "birthday": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The birthday field is required."
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/verify_user_email": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify with Otp",
                "operationId": "4693940b04326d7e3d59fe296eab8a87",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Verify successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verify successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "8cb7742ae98d0990acb2907c4e00bf24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorize",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorize"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "423": {
                        "description": "Account have not active yet.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account have not active yet."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create post",
                "operationId": "41491dedc1e7a018ae98a03ce04957ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create new post successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Create new post failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Create new post failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "buithuyngoc1@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 6,
                        "example": "buithuyngoc2003"
                    }
                },
                "type": "object"
            },
            "SignupRequest": {
                "required": [
                    "email",
                    "password",
                    "confirmPassword",
                    "name",
                    "sex",
                    "birthday",
                    "address"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "buithuyngoc1@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 6,
                        "example": "buithuyngoc2003"
                    },
                    "confirmPassword": {
                        "type": "string",
                        "example": "buithuyngoc2003"
                    },
                    "name": {
                        "type": "string",
                        "example": "Bui Thuy Ngoc"
                    },
                    "sex": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "female"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date",
                        "example": "13/02/2003"
                    },
                    "address": {
                        "type": "string",
                        "example": "Ha Dong"
                    }
                },
                "type": "object"
            },
            "VerifyEmailRequest": {
                "required": [
                    "email",
                    "token"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "buithuyngoc1@gmail.com"
                    },
                    "token": {
                        "type": "string",
                        "example": "token"
                    }
                },
                "type": "object"
            },
            "PostRequest": {
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "example": "Bui Thuy Ngoc rat xinh dep=))"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "20"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "106"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "sanctum": {
                "type": "http",
                "description": "Enter token in format (Bearer )",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}